/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.16
 * Generated at: 2019-02-28 11:01:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.DecimalFormat;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.text.DecimalFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang = \"es\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Alquiler de Viviendas</title>\r\n");
      out.write("<style type=\"text/css\" media=\"screen\">\r\n");
      out.write("\tbody{\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t\tanimation-name: fondo;\r\n");
      out.write("\t\tanimation-duration: 60s;\r\n");
      out.write("\t\tanimation-iteration-count: infinite;\r\n");
      out.write("\t\tanimation-direction: alternate;\r\n");
      out.write("\t}\r\n");
      out.write("\tform {\r\n");
      out.write("\t\twidth: 33%;\r\n");
      out.write("\t\tmargin-left: 33%;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\tinput, select, option {\r\n");
      out.write("\tbackground: rgba(255, 255, 255, 0.5);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t@keyframes fondo{\r\n");
      out.write("\t\t50%{background-color: #ccffee;}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

		double precio = 0;
		double mejoras = 0;
		
		DecimalFormat df = new DecimalFormat("#,##0.00"); 
		if(request.getParameter("sitio")!=null) precio = Double.parseDouble(request.getParameter("sitio")) * Double.parseDouble(request.getParameter("metros"));
		if (request.getParameter("cale") != null) mejoras = mejoras + Double.parseDouble(request.getParameter("cale"));
		if (request.getParameter("pisci") != null) mejoras = mejoras + Double.parseDouble(request.getParameter("pisci"));
		if (request.getParameter("aire") != null) mejoras = mejoras + Double.parseDouble(request.getParameter("aire"));
		precio = precio + precio * mejoras / 100;
		if (request.getParameter("paro") != null) precio = precio - (precio * Double.parseDouble(request.getParameter("paro"))/100);
	
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<form method=\"get\" accept-charset=\"utf-8\">\r\n");
      out.write("\t\t<fieldset>\r\n");
      out.write("\t\t\t<legend>Calcula el precio de tu vivienda</legend>\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t<p>Localidad: <select name=\"sitio\">\r\n");
      out.write("\t\t\t\t<option value=\"20\">Leganés (20€/m)</option>\r\n");
      out.write("\t\t\t\t<option value=\"15\">Fuenlabrada (15€/m)</option>\r\n");
      out.write("\t\t\t\t<option value=\"14\">Móstoles (14€/m)</option>\r\n");
      out.write("\t\t\t\t<option value=\"21\">Alcorcón (21€/m)</option>\r\n");
      out.write("\t\t\t</select></p>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<p>Tamaño: <input type=\"number\" name=\"metros\" placeholder=\"Metros cuadrados\" min = \"10\" required></p>\r\n");
      out.write("\t\t\t<p>\r\n");
      out.write("\t\t\t\t<label><input type=\"checkbox\" name=\"cale\" value=\"3\"> Calefacción</label> <!-- El valor es el %  que aumenta el precio-->\r\n");
      out.write("\t\t\t\t<label><input type=\"checkbox\" name=\"pisci\" value=\"3\"> Piscina</label>\r\n");
      out.write("\t\t\t\t<label><input type=\"checkbox\" name=\"aire\" value=\"3\"> Aire Acondicionado</label>\r\n");
      out.write("\t\t\t</p>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<p>\r\n");
      out.write("\t\t\t\t<label>¿Está en paro?\r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"paro\" value=\"4\"> Si <!-- El valor es el % que reduce el precio -->\r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"paro\" value=\"0\" checked> No\r\n");
      out.write("\t\t\t\t</label>\r\n");
      out.write("\t\t\t</p>\t\t\t\r\n");
      out.write("\t\t\t<p>\r\n");
      out.write("\t\t\t\t<input type=\"submit\" name=\"boton\" value=\"Consultar\">\r\n");
      out.write("\t\t\t</p>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t</fieldset>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t\t");
 if (precio != 0) {
      out.write("\r\n");
      out.write("\t\t\t<h1>El Precio de la vivienda es: ");
      out.print( df.format(precio) );
      out.write("€</h1>\r\n");
      out.write("\t\t");
}
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
